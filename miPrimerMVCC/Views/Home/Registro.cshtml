@model Web100.Models.ViewModel.RegistroPersona

@{
    ViewBag.Title = "Registro";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script>

    var urlAgregar = "@Url.Content("~/Home/RegistroPersona")";
    function Agregar()
    {

        fetch(urlAgregar,
            {
                method: "POST",
                body: JSON.stringify(
                                    {
                                        Nombre: document.getElementById("Nombre").value,
                                        ApellidoPaterno: document.getElementById("ApellidoPaterno").value,
                                        ApellidoMaterno: document.getElementById("ApellidoMaterno").value,
                                        Estatus: document.getElementById("Estatus").value
                                    }
                                    ),
                headers:{
                            'Accept': "application/json",
                            "Content-Type": "application/json"
                        }
            }
            ).then(function (response)
            {
                if (response.ok)
                    return response.text()
                else
                    alert("Error")
            }
            ).then(function (Data)
            {
                if (Data != "1")
                {
                    alert(Data)
                } else
                {
                    document.location.href = "@Url.Content("~/Index")";
                }
            })
    }
    
</script>


<h2>Registro</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Persona</h4>
    <hr />


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" , id = "Nombre" } })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApellidoPaterno, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ApellidoPaterno, new { htmlAttributes = new { @class = "form-control" , id = "ApellidoPaterno" } })
            @Html.ValidationMessageFor(model => model.ApellidoPaterno, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApellidoMaterno, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ApellidoMaterno, new { htmlAttributes = new { @class = "form-control" , id = "ApellidoMaterno" } })
            @Html.ValidationMessageFor(model => model.ApellidoMaterno, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Estatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="list-group">

                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Selected = true,
                        Text = "Activo",
                        Value = "1"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Inactivo",
                        Value = "0"
                    });
                }

                @Html.DropDownListFor(model => model.Estatus, listItems, htmlAttributes: new { id = "Estatus", @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Estatus, "", new { @class = "text-danger" })

            </div>


        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Aceptar" class="btn btn-primary" onclick="Agregar()"/>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
